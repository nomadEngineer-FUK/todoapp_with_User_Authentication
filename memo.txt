★ユーザ認可について
1. 認証（Authentication）と認可（Authorization）の違い
    認証（Authentication）: ユーザーが「誰であるか」を確認するプロセスです。たとえば、ログイン画面でユーザーがメールアドレスとパスワードを入力し、それが正しいかどうかを確認することが認証です。
    認可（Authorization）: 認証されたユーザーが「どの操作を行って良いか」を決定するプロセスです。たとえば、管理者だけが管理画面にアクセスできる、特定のユーザーだけが特定のデータを閲覧・編集できるなどの制御を行います。
2. ユーザーごとの認可とは？
    「ユーザーごとの認可」とは、認証済みのユーザーに対して、そのユーザーが何をできるかを制御する機能です。具体的には、次のようなシチュエーションがあります。

    管理者と一般ユーザー:
    管理者ユーザーは、他のユーザーの情報を閲覧・編集できるが、一般ユーザーは自分の情報しか閲覧・編集できない。
    チームやプロジェクトごとのアクセス制御:
    特定のプロジェクトやチームに所属するユーザーだけが、そのプロジェクトに関する情報を閲覧できる。
    個人情報のアクセス:
    ユーザーAのデータはユーザーAのみがアクセスでき、他のユーザーはアクセスできない。
3. 認可機能の設計・実装
    認可を実現するためには、以下のような基本的なステップがあります。

    ステップ1: ユーザーロールの定義
    ロールベースの認可: ユーザーごとに「ロール（役割）」を設定し、そのロールに基づいてアクセス権限を決定します。例えば、「管理者」「一般ユーザー」「ゲスト」のようなロールを定義できます。
    例: 管理者はすべてのデータにアクセスできるが、一般ユーザーは自分のデータにのみアクセスできる。
    ステップ2: アクセス権限の設定
    リソースごとの権限設定: アプリ内の各リソース（ページ、データ、機能）に対して、どのロールやユーザーがアクセス可能かを設定します。
    例: 「/admin」ページには管理者だけがアクセスできるように設定する。
    ステップ3: 実装
    ミドルウェアの使用: 多くのWebフレームワークでは、認証されたユーザーが特定のリソースにアクセスする際に、アクセス権をチェックするためのミドルウェアや関数を提供しています。

★概要
・権限は2つ（管理者と一般ユーザー）
・それぞれの権限で出来ること
　【管理者】全てのtodoの閲覧・編集・削除
　【一般ユーザー】自分が作成したtodoの閲覧・編集・削除



★具体的なview画面
・トップ画面（/todos）にどのユーザーが作成したかを表示する
　⇒アカウント名みたいなものの登録が必要（無い場合はメアドの@前までを代用？）
・自分が作成したtodoのみに対し、編集・削除のボタンが表示される
・Todo Title にリンクを付ける
　⇒詳細ページに飛ぶ（※）（detailも記載があるように。ここで編集・削除も出来る）
　⇒編集・削除後は直で/todosに飛ぶ


※詳細ページでは以下を追加
・detail
・リンク
・備考

